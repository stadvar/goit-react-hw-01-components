{"version":3,"sources":["components/Profile.jsx","components/Statistics.jsx","components/FriendListItem.jsx","components/FriendList.jsx","components/TransactionHistory.jsx","App.js","index.js"],"names":["Profile","avatar","name","tag","location","stats","className","src","alt","width","followers","views","likes","Statistics","title","map","el","label","percentage","id","FriendListItem","isOnline","toString","FriendList","friends","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ozGA+CeA,G,YA5CC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC9C,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBACEC,IAAKN,EACLO,IAAI,gHACJF,UAAU,SACVG,MAAM,QAER,mBAAGH,UAAU,OAAb,SAAqBJ,IACrB,mBAAGI,UAAU,MAAb,SAAoBH,IACpB,mBAAGG,UAAU,WAAb,SAAyBF,OAE3B,qBAAIE,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMK,eAEpC,+BACE,sBAAMJ,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMM,WAEpC,+BACE,sBAAML,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMO,mBCD7BC,EAzBI,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOT,EAAY,EAAZA,MAC3B,OACE,0BAASC,UAAU,aAAnB,UACGQ,GAAS,oBAAIR,UAAU,QAAd,SAAuBQ,IACjC,oBAAIR,UAAU,YAAd,SACGD,EAAMU,KAAI,SAAAC,GAAE,OACX,qBAAgBV,UAAU,OAA1B,UACE,sBAAMA,UAAU,QAAhB,SAAyBU,EAAGC,QAC5B,sBAAMX,UAAU,aAAhB,SAA8BU,EAAGE,eAF1BF,EAAGG,aCWPC,EAjBQ,SAAC,GAAoC,IAAlCnB,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,KAAgBiB,GAAS,EAAnBE,SAAmB,EAATF,IAChD,OACE,qBAAwBb,UAAU,OAAlC,UACE,sBAAMA,UAAU,SAAhB,SAA0Ba,IAC1B,qBAAKb,UAAU,SAASC,IAAKN,EAAQO,IAAKN,EAAMO,MAAM,OACtD,mBAAGH,UAAU,OAAb,SAAqBJ,MAHdiB,EAAGG,aCkBDC,EApBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEpB,OACE,oBAAIlB,UAAU,cAAd,SACGkB,EAAQT,KAAI,SAAAC,GAAE,OACb,cAAC,EAAD,CACEf,OAAQe,EAAGf,OACXC,KAAMc,EAAGd,KACTmB,SAAUL,EAAGK,SACbF,GAAIH,EAAGG,WCuBFM,EAjCY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAE5B,OACE,wBAAOpB,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGoB,EAAMX,KAAI,gBAAGI,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACT,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHEV,Y,4BCkBJW,MAtBf,WACE,OACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,CACEJ,KAAM6B,EAAK7B,KACXC,IAAK4B,EAAK5B,IACVC,SAAU2B,EAAK3B,SACfH,OAAQ8B,EAAK9B,OACbI,MAAO0B,EAAK1B,QAEd,uBACA,cAAC,EAAD,CAAYS,MAAM,eAAeT,MAAO2B,IACxC,uBACA,cAAC,EAAD,CAAY3B,MAAO2B,IACnB,uBACA,cAAC,EAAD,CAAYR,QAASA,IAbvB,IAcE,uBACA,cAAC,EAAD,CAAoBE,MAAOO,IAf7B,QCNJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5be11f19.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n// import defaultImage from './default.jpg';\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className=\"avatar\"\r\n          width=\"250\"\r\n        />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n      <ul className=\"stats\">\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className=\"statistics\">\r\n      {title && <h2 className=\"title\">{title}</h2>}\r\n      <ul className=\"stat-list\">\r\n        {stats.map(el => (\r\n          <li key={el.id} className=\"item\">\r\n            <span className=\"label\">{el.label}</span>\r\n            <span className=\"percentage\">{el.percentage}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline, id }) => {\r\n  return (\r\n    <li key={id.toString()} className=\"item\">\r\n      <span className=\"status\">{id}</span>\r\n      <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nconst FriendList = ({ friends }) => {\r\n  //   console.log(friends);\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      {friends.map(el => (\r\n        <FriendListItem\r\n          avatar={el.avatar}\r\n          name={el.name}\r\n          isOnline={el.isOnline}\r\n          id={el.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\nconst TransactionHistory = ({ items }) => {\r\n  //   console.log(items);\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import './App.css';\nimport Profile from './components/Profile';\nimport Statistics from './components/Statistics';\nimport FriendList from './components/FriendList';\nimport TransactionHistory from './components/TransactionHistory';\n\nimport user from './jsons/user.json';\nimport statisticalData from './jsons/statistical-data.json';\nimport friends from './jsons/friends.json';\nimport transactions from './jsons/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <hr />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <hr />\n      <Statistics stats={statisticalData} />\n      <hr />\n      <FriendList friends={friends} />,\n      <hr />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}